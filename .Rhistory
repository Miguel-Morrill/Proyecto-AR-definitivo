setwd('C:/Users/theso/OneDrive/Documents/Semestre 6/Analisis de Riesgo/modulos/Datos')
Emisoras <- read_csv('Emisoras_Completo2.csv')
install.packages("reshape2")
library(quantmod)
library(PerformanceAnalytics)
library(lubridate)
library(reshape2)
library(ggplot2)
tickers <- c("SITESB-1.MX", "LACOMERUBC.MX", "RA.MX", "GFINBURO.MX",  "GFNORTEO.MX", "AMX")
getSymbols(tickers, from = "2016-01-02", to = today(), warnings = FALSE)
list <- lapply(tickers, function(x) Cl(get(x)))
precio.cierre <- do.call(merge,list)
retornos <- data.frame(apply(precio.cierre, 2, function(x) Delt(x, type = "log")), fecha = index(precio.cierre))
reshape <- melt(retornos, id.vars = "fecha")
g2 <- ggplot(reshape) + geom_line(mapping = aes(fecha,value, color = variable))
g2 <- g2 + labs(title = "Retornos", subtitle = "SITES, WALMART")
g2 <- g2 + theme_bw() + xlab("Fecha") + ylab("Retornos")
g2 <- g2 + scale_color_manual("Tickers", values = c("green", "yellow", "orange", "red", "blue", "purple", "pink"))
g2 <- g2 + theme(legend.position = "bottom")
g2
tickers <- c("SITESB-1.MX", "LACOMERUBC.MX", "RA.MX", "GFINBURO.MX",  "GFNORTEO.MX", "AMX", "^MXX")
getSymbols(tickers, from = "2016-01-02", to = today(), warnings = FALSE)
list <- lapply(tickers, function(x) Cl(get(x)))
tickers <- c("SITESB-1.MX", "LACOMERUBC.MX", "RA.MX", "GFINBURO.MX",  "GFNORTEO.MX", "AMX", "MXX")
getSymbols(tickers, from = "2016-01-02", to = today(), warnings = FALSE)
list <- lapply(tickers, function(x) Cl(get(x)))
precio.cierre <- do.call(merge,list)
retornos <- data.frame(apply(precio.cierre, 2, function(x) Delt(x, type = "log")), fecha = index(precio.cierre))
reshape <- melt(retornos, id.vars = "fecha")
g2 <- ggplot(reshape) + geom_line(mapping = aes(fecha,value, color = variable))
g2 <- g2 + labs(title = "Retornos", subtitle = "SITES, WALMART")
g2 <- g2 + theme_bw() + xlab("Fecha") + ylab("Retornos")
g2 <- g2 + scale_color_manual("Tickers", values = c("green", "yellow", "orange", "red", "blue", "purple", "pink"))
g2 <- g2 + theme(legend.position = "bottom")
g2
rend_T <- merge.xts(rendimiento, rend_LACOMERUBC, rend_RA, rend_GFINBURO, rend_GFNORTEO,  rend_AMX, rend_mercado)
plot(rend_T, main = "Rendimientos de los Activos + IPC", legend = c("SITESB-1.MX", "LACOMERUBC.MX", "RA.MX", "GFINBURO.MX",  "GFNORTEO.MX", "AMX", "MXX"))
rend_T <- merge.xts(rendimiento, rend_LACOMERUBC, rend_RA, rend_GFINBURO, rend_GFNORTEO,  rend_AMX, rend_mercado)
plot(rend_T, main = "Rendimientos de los Activos + IPC")
legend = ("upper left", c("SITESB-1.MX", "LACOMERUBC.MX", "RA.MX", "GFINBURO.MX",  "GFNORTEO.MX", "AMX", "MXX"))
rend_T <- merge.xts(rendimiento, rend_LACOMERUBC, rend_RA, rend_GFINBURO, rend_GFNORTEO,  rend_AMX, rend_mercado)
plot(rend_T, main = "Rendimientos de los Activos + IPC")
legend("upper left", c("SITESB-1.MX", "LACOMERUBC.MX", "RA.MX", "GFINBURO.MX",  "GFNORTEO.MX", "AMX", "MXX"))
rend_T <- merge.xts(rendimiento, rend_LACOMERUBC, rend_RA, rend_GFINBURO, rend_GFNORTEO,  rend_AMX, rend_mercado)
plot(rend_T, main = "Rendimientos de los Activos + IPC")
legend("bottom", c("SITESB-1.MX", "LACOMERUBC.MX", "RA.MX", "GFINBURO.MX",  "GFNORTEO.MX", "AMX", "MXX"))
rend_T <- merge.xts(rendimiento, rend_LACOMERUBC, rend_RA, rend_GFINBURO, rend_GFNORTEO,  rend_AMX, rend_mercado)+
plot(rend_T, main = "Rendimientos de los Activos + IPC")
rend_T <- merge.xts(rendimiento, rend_LACOMERUBC, rend_RA, rend_GFINBURO, rend_GFNORTEO,  rend_AMX, rend_mercado)
plot(rend_T, main = "Rendimientos de los Activos + IPC")
legend("bottom", c("SITESB-1.MX", "LACOMERUBC.MX", "RA.MX", "GFINBURO.MX",  "GFNORTEO.MX", "AMX", "MXX"))
list <- lapply(na.fill(tickers), function(x) Cl(get(x)))
list <- lapply(na.omit(tickers), function(x) Cl(get(x)))
precio.cierre <- do.call(merge,list)
retornos <- data.frame(apply(precio.cierre, 2, function(x) Delt(x, type = "log")), fecha = index(precio.cierre))
reshape <- melt(retornos, id.vars = "fecha")
g2 <- ggplot(reshape) + geom_line(mapping = aes(fecha,value, color = variable))
g2 <- g2 + labs(title = "Retornos", subtitle = "SITES, WALMART")
g2 <- g2 + theme_bw() + xlab("Fecha") + ylab("Retornos")
g2 <- g2 + scale_color_manual("Tickers", values = c("green", "yellow", "orange", "red", "blue", "purple", "pink"))
g2 <- g2 + theme(legend.position = "bottom")
g2
rend_T <- merge.xts(rendimiento, rend_LACOMERUBC, rend_RA, rend_GFINBURO, rend_GFNORTEO,  rend_AMX, rend_mercado)
plot(rend_T, main = "Rendimientos de los Activos + IPC")
legend("bottom", c("SITESB-1.MX", "LACOMERUBC.MX", "RA.MX", "GFINBURO.MX",  "GFNORTEO.MX", "AMX", "MXX"), col=1:2, pch = 1:2)
rend_T <- merge.xts(rendimiento, rend_LACOMERUBC, rend_RA, rend_GFINBURO, rend_GFNORTEO,  rend_AMX, rend_mercado)
plot(rend_T, main = "Rendimientos de los Activos + IPC")
legend("bottom", legend = c("SITESB-1.MX", "LACOMERUBC.MX", "RA.MX", "GFINBURO.MX",  "GFNORTEO.MX", "AMX", "MXX"), col=1:2, pch = 1:2)
setwd('C:/Users/theso/OneDrive/Documents/Semestre 6/Analisis de Riesgo/modulos/Datos')
Emisoras <- read_csv('Emisoras_Completo2.csv')
setwd('../Proyecto-AR-definitivo/Datos')
Emisoras <- read_csv('Emisoras_Completo2.csv')
setwd('../Proyecto-AR-definitivo/Datos')
Emisoras <- read_csv('Emisoras_Completo2.csv')
knitr::opts_chunk$set(echo = TRUE)
library(quantmod)
library(PerformanceAnalytics)
library(fBasics)
library(akima)
library(normtest)
library(crop)
library(lubridate)
library(tibble)
library(ggplot2)
library(fTrading)
library(fGarch)
clave <- "SITESB-1.MX"
datos <- new.env()
getSymbols(clave, from = "2016-01-02", to = today(), warnings = FALSE, env = datos)
precio <- datos[[clave]][,6] #la información en la columna 6, o sea los precios al cierre
names(precio) <- clave
Rendimiento<-na.omit(diff(log(precio)))
independencia <- Box.test(precio,lag=1,type="Ljung-Box",fitdf = 0)
independencia$statistic
garch11 <- garchFit(formula = ~garch(1,1),data = Rendimiento, cond.dist = "norm")
garch12 <- garchFit(formula = ~garch(1,2),data = Rendimiento, cond.dist = "norm")
garch21 <- garchFit(formula = ~garch(2,1),data = Rendimiento, cond.dist = "norm")
garch22 <- garchFit(formula = ~garch(2,2),data = Rendimiento, cond.dist = "norm")
garch10 <- garchFit(formula = ~garch(1,0),data = Rendimiento, cond.dist = "norm")
garch20 <- garchFit(formula = ~garch(2,0),data = Rendimiento, cond.dist = "norm")
parGarch11 <- garch11@fit[["par"]]
parGarch12 <- garch12@fit[["par"]]
parGarch21 <- garch21@fit[["par"]]
parGarch22 <- garch22@fit[["par"]]
parGarch10 <- garch10@fit[["par"]]
parGarch20 <- garch20@fit[["par"]]
icsGarch11 <- garch11@fit[["ics"]]
icsGarch12 <- garch12@fit[["ics"]]
icsGarch21 <- garch21@fit[["ics"]]
icsGarch22 <- garch22@fit[["ics"]]
icsGarch10 <- garch10@fit[["ics"]]
icsGarch20 <- garch20@fit[["ics"]]
AICoptimo <- c(icsGarch20[1],icsGarch10[1],icsGarch11[1],icsGarch12[1],icsGarch21[1],icsGarch22[1])
AICoptimo <- sort(AICoptimo)
AICoptimo
icsGarch11
#parGarch11
# Obteniendo volatilidad a largo plazo
Var_L = as.numeric(parGarch11[2])/as.numeric(1-parGarch11[3]-parGarch11[4])
Var_L
Vol_L = sqrt(Var_L)
Vol_L
vLGarch11 <- garch11@fit[["value"]][["LogLikelihood"]]
vLGarch12 <- garch12@fit[["value"]][["LogLikelihood"]]
vLGarch21 <- garch21@fit[["value"]][["LogLikelihood"]]
vLGarch22 <- garch22@fit[["value"]][["LogLikelihood"]]
vLGarch10 <- garch10@fit[["value"]][["LogLikelihood"]]
vLGarch20 <- garch20@fit[["value"]][["LogLikelihood"]]
Rendimiento2 <- Rendimiento**2
Var_Real<-Rendimiento**2
Var_Est_GARCH <- garch11@h.t
Resultados2 <- merge.xts(Var_Real, Var_Est_GARCH)
names(Resultados2) <- c('Var_Real','Var_Est_GARCH[1,1]')
plot(Resultados2, legend.loc = 'top', main="Variaciones Reales vs Variaciones GARCH[1,1]", lwd=c(.4,.8), col=c('blue','red'))
Vol_Real<-sqrt(Var_Real)
Vol_Est_GARCH <- sqrt(Var_Est_GARCH)
Resultados2 <- merge.xts(Vol_Real, Vol_Est_GARCH)
names(Resultados2) <- c('Vol_Real','Vol_Est_GARCH[1,1]')
plot(Resultados2, legend.loc = 'top', main="Volatilidad Real vs Volatilidad GARCH[1,1]", lwd=c(.4,.8), col=c('blue','red'))
Est_Fut_GARCH <- (predict(garch11, n.ahead = 1))
as.numeric(Est_Fut_GARCH[3])
n <- nrow(Rendimiento)
Fecha_Est_Fut <- date(Rendimiento[n,])+1
Fecha_Est_Fut
n <- nrow(Var_Real)
mavback <- function(x,n){ filter(x, c(0, rep(1/n,n)), sides=1) }
Var_Est5<-xts(mavback(Var_Real, n=5), order.by = date(Var_Real))
Var_Est10<-xts(mavback(Var_Real, n=10), order.by = date(Var_Real))
Var_Est20<-xts(mavback(Var_Real, n=20), order.by = date(Var_Real))
Var_Est40<-xts(mavback(Var_Real, n=40), order.by = date(Var_Real))
Var_Est<-merge.xts(Var_Est5, Var_Est10, Var_Est20, Var_Est40)
Var_Est<-merge.xts(Var_Est5, Var_Est10, Var_Est20, Var_Est40)
names(Var_Est)<-c("M5","M10","M20","M40")
plot(Var_Est, legend.loc="top", main = "Estimaciones de la Varianza", lwd=.5)
Dif_Est<-merge.xts((Var_Real-Var_Est5)^2,(Var_Real-Var_Est10)^2, (Var_Real-Var_Est20)^2, (Var_Real-Var_Est40)^2)
names(Dif_Est)<-c("5","10","20","40")
plot(Dif_Est, legend.loc = "bottom", main="Diferencias en la estimación", lwd=.5)
RMSE<-as.data.frame(sqrt(colMeans(na.omit(Dif_Est))))
names(RMSE)<-c("RMSE")
RMSE
M_opt<-subset(RMSE, RMSE==min(RMSE))
m<-as.numeric(row.names(M_opt))
m
if(m==5){Var_Opt<-Var_Est5}
if(m==10){Var_Opt<-Var_Est10}
if(m==20){Var_Opt<-Var_Est20}
if(m==40){Var_Opt<-Var_Est40}
Vol_Est_PM = sqrt(Var_Opt)
n <- nrow(Var_Real)
Var_Est <- matrix(0,n-1,1)
a <- seq(0.1,0.99,by=0.01)
Var_Est[1,1] <- Var_Real[1,1]
Func <- matrix(0,n-1,1)
Resultados <- matrix(0,length(a),2)
colnames(Resultados) <- c('Lambda', 'Sum_FMV')
j <- 0
for (L in a) {
for (i in 2:(n-1)) {
Var_Est[i,1] <- (1-L)*Var_Real[i-1,1] + L*Var_Est[i-1,1] #modelo EWMA
Func[i,1] <- - log(Var_Est[i-1,1]) - Var_Real[i-1,1] / Var_Est[i-1,1]
}
j <- j+1
FMaxAct <- sum(Func)
Resultados[j,1] <- L
Resultados[j,2] <- FMaxAct
}
L_opt <- Resultados[order(Resultados[,'Sum_FMV'], decreasing = TRUE),]
L_opt <- as.numeric(L_opt[1,1])
Var_Est_EWMA <- xts(emaTA(Var_Real, lambda = L_opt), order.by= date(Rendimiento))
Vol_Est_EWMA <- sqrt(Var_Est_EWMA)
Resultados2 <- merge.xts(Vol_Est_PM, Vol_Est_EWMA, Vol_Est_GARCH)
names(Resultados2) <- c('Vol_PM','Vol_EWMA','Vol_GARCH[1,1]')
plot(Resultados2, legend.loc = 'top', main ='Volatilidades de los 3 modelos', lwd=c(.4,.8), col=c('blue','red', 'green'))
AICoptimo <- c(icsGarch20[1],icsGarch10[1],icsGarch11[1],icsGarch12[1],icsGarch21[1],icsGarch22[1])
AICoptimo <- AICoptimo.min()
AICoptimo <- c(icsGarch20[1],icsGarch10[1],icsGarch11[1],icsGarch12[1],icsGarch21[1],icsGarch22[1])
AICoptimo <- sort(AICoptimo)
AICoptimo
icsGarch11
AICoptimo <- c(icsGarch20[1],icsGarch10[1],icsGarch11[1],icsGarch12[1],icsGarch21[1],icsGarch22[1])
AICoptimo <- min(AICoptimo)
AICoptimo
icsGarch11
AICoptimo <- c(icsGarch20[1],icsGarch10[1],icsGarch11[1],icsGarch12[1],icsGarch21[1],icsGarch22[1])
AICoptimo
AICoptimo <- min(AICoptimo)
AICoptimo
icsGarch11
AICoptimo <- c(icsGarch20[1],icsGarch10[1],icsGarch11[1],icsGarch12[1],icsGarch21[1],icsGarch22[1])
AICoptimo
AICoptimo_min <- min(AICoptimo)
AICoptimo_min
AICoptimo <- c(icsGarch20[1],icsGarch10[1],icsGarch11[1],icsGarch12[1],icsGarch21[1],icsGarch22[1])
AICoptimo
AICoptimo_min <- min(AICoptimo)
AICoptimo_min
icsGarch11
rend_T <- merge.xts(rendimiento, rend_LACOMERUBC, rend_RA, rend_GFINBURO, rend_GFNORTEO,  rend_AMX, rend_mercado)
plot(rend_T, main = "Rendimientos de los Activos + IPC")
legend("bottom", legend = c("SITESB-1.MX", "LACOMERUBC.MX", "RA.MX", "GFINBURO.MX",  "GFNORTEO.MX", "AMX", "MXX"), col=1:2, pch = 1:2)
setwd('C:/Users/theso/OneDrive/Documents/Semestre 6/Analisis de Riesgo/Proyecto-AR-definitivo/Datos')
Emisoras <- read_csv('Emisoras_Completo2.csv')
setwd('C:/Users/theso/OneDrive/Documents/Semestre 6/Analisis de Riesgo/Proyecto-AR-definitivo/Datos')
Emisoras <- read_csv('Emisoras_Completo2.csv')
library(quantmod)
library(PerformanceAnalytics)
library(lubridate)
clave <- "SITESB-1.MX"
datos <- new.env()
getSymbols(clave, from = "2015-01-02", to = today(), warnings = FALSE, env = datos)
precio <- datos[[clave]][,6] #la información en la columna 6, o sea los precios al cierre
names(precio) <- clave
chartSeries(precio, name = paste("Precio", clave),up.col = "green", dn.col = "red")
rendimiento <- na.omit(diff(log(precio)))
chartSeries(rendimiento, name = paste("Precio", clave), up.col = "green", dn.col = "red")
library(quantmod)
library(PerformanceAnalytics)
library(fBasics)
library(akima)
library(normtest)
library(crop)
library(lubridate)
library(ggplot2)
library(tibble)
clave <- 'SITESB-1.MX'
datos <- new.env()
getSymbols(clave,from="2016-01-02",to=today(),warning=FALSE,env=datos)
precio<-datos[[clave]][,6]
names(precio) <- clave
rendimiento<-na.omit(diff(log(precio)))
#chartSeries(to.monthly(rendimiento),name=paste("Precio",clave),theme="white",up.col="black",dn.col="red")
chartSeries((rendimiento),name=paste("Precio",clave),theme="white",up.col="black",dn.col="red")
chartSeries(precio, name = paste("Precio", clave),up.col = "green", dn.col = "red")
ggplot(rendimiento, aes(rendimiento)) +
geom_histogram(aes(y = ..density..), fill='white', color = 'brown') + #queremos obtener los valores ponderados de la frecuencia
geom_density(fill = 'green', alpha=.15)+ #alpha me meustro el 15% del color
geom_vline(aes(xintercept=mean(rendimiento)), color='blue', linetype='dashed', size=1)
chartSeries(to.monthly(precio), theme='white', up.col='green', dn.col='red', name=paste('Precio de', clave))
addBBands() #el 95% de los precios observados se encuentran entre las bandas, ahi vemos que la volatilidad no es constante.
ggplot(rendimiento, aes(rendimiento)) + theme_bw()+
geom_density(fill = 'green', alpha=.15)+
stat_function(fun=dnorm, args = list(mean=mean(rendimiento$'SITESB-1.MX'), sd=sd(rendimiento$'SITESB-1.MX')), color='green', size=1.5) #distibucion normal con media y varianza iguales a las de mi vector de rendimiento
library(quantmod)
library(PerformanceAnalytics)
library(fBasics)
library(akima)
library(normtest)
library(crop)
library(lubridate)
library(ggplot2)
library(moments)
library(tibble)
rend_diario <- mean(rendimiento)
print('Rendimiento Promedio Diario')
rend_diario
rend_anualizado <- mean(rendimiento)*252
print('Rendimiento Promedio Anualizado')
rend_anualizado
vol_diaria <- sqrt(var(rendimiento))
print("Volatilidad Diaria")
as.numeric(vol_diaria)
vol_anualizada <- sqrt(var(rendimiento)*252)
print("Volatilidad Anualizada")
as.numeric(vol_anualizada)
jbr <- jarque.test(as.numeric(rendimiento))
jbr[['statistic']]
jbp <- jarque.test(as.numeric(precio))
jbp[['statistic']]
jbl <- jarque.test(as.numeric(log(precio)))
jbl[['statistic']]
kurtosis(rendimiento)
skewness(rendimiento)
jbr_2016 <- jarque.test(as.numeric(rendimiento[year(rendimiento)==2016]))
jbr_2016[['statistic']]
kurtosis(as.numeric(rendimiento[year(rendimiento)==2016]))
jbr_2017 <- jarque.test(as.numeric(rendimiento[year(rendimiento)==2017]))
jbr_2017[['statistic']]
kurtosis(as.numeric(rendimiento[year(rendimiento)==2017]))
jbr_2018 <- jarque.test(as.numeric(rendimiento[year(rendimiento)==2018]))
jbr_2018[['statistic']]
kurtosis(as.numeric(rendimiento[year(rendimiento)==2018]))
jbr_2019 <- jarque.test(as.numeric(rendimiento[year(rendimiento)==2019]))
jbr_2019[['statistic']]
kurtosis(as.numeric(rendimiento[year(rendimiento)==2019]))
jbr_2020 <- jarque.test(as.numeric(rendimiento[year(rendimiento)==2020]))
jbr_2020[['statistic']]
kurtosis(as.numeric(rendimiento[year(rendimiento)==2020]))
jbr_2021 <- jarque.test(as.numeric(rendimiento[year(rendimiento)==2021]))
jbr_2021[['statistic']]
kurtosis(as.numeric(rendimiento[year(rendimiento)==2021]))
t <- t.test(as.numeric(rendimiento))
t[['statistic']]
aux <- 0
for (annum in c(2016,2017,2018,2019,2020,2021))
{
aux <- t.test(as.numeric(rendimiento[year(rendimiento)==annum]))
print(aux[['statistic']])+print(annum)
aux <- 0
}
mu_2020 <- mean(rendimiento[year(rendimiento)==2020])
sigma_2020 <- sqrt(var(rendimiento[year(rendimiento)==2020]))
print(mu_2020)
print("rendimiento esperado diario")
print(sigma_2020)
print("volatilidad diaria")
d <- length(rendimiento)
S0 <- as.numeric(precio[d])
S0
n <- 10000
dt <- 10
simula <- tibble(epsilon=rnorm(n),dS=S0*mu_2020*dt+S0*sigma_2020*sqrt(dt)*epsilon)
PE_10 <- S0+mean(simula$dS)
PE_10
Media_DS <- mean(simula$dS)
DeSt_DS <- as.numeric(sqrt(var(simula$dS)))
Z <- qnorm(.975)
P_Sup_10 <- S0+Media_DS+Z*DeSt_DS
P_Inf_10 <- S0+Media_DS-Z*DeSt_DS
P_Sup_10
P_Inf_10
S0
n <- 10000
dt <- 20
simula <- tibble(epsilon=rnorm(n),dS=S0*mu_2020*dt+S0*sigma_2020*sqrt(dt)*epsilon)
PE_20 <- S0+mean(simula$dS)
PE_20
Media_DS <- mean(simula$dS)
DeSt_DS <- as.numeric(sqrt(var(simula$dS)))
Z <- qnorm(.975)
P_Sup_20 <- S0+Media_DS+Z*DeSt_DS
P_Inf_20 <- S0+Media_DS-Z*DeSt_DS
P_Sup_20
P_Inf_20
S0
n <- 10000
dt <- 40
simula <- tibble(epsilon=rnorm(n),dS=S0*mu_2020*dt+S0*sigma_2020*sqrt(dt)*epsilon)
PE_40 <- S0+mean(simula$dS)
PE_40
Media_DS <- mean(simula$dS)
DeSt_DS <- as.numeric(sqrt(var(simula$dS)))
Z <- qnorm(.975)
P_Sup_40 <- S0+Media_DS+Z*DeSt_DS
P_Inf_40 <- S0+Media_DS-Z*DeSt_DS
print(P_Sup_40)
P_Sup_40
print(P_Inf_40)
print(S0)
S0
resumen <- tibble(Diez <- c(PE_10,P_Sup_10,P_Inf_10),
Veinte <- c(PE_20,P_Sup_20,P_Inf_20),
Cuarenta <- c(PE_40,P_Sup_40,P_Inf_40),
.name_repair = ~ c("Diez días","Veinte días","Cuarenta días"))
resumen <- as.data.frame(resumen)
rownames(resumen) <- c("Valor esperado","Superior 95%","Inferior 95%")
resumen
mu_2020_a <- mean(rendimiento[year(rendimiento)==2020])*252
sigma_2020_a <- sqrt(var(rendimiento[year(rendimiento)==2020])*252)
print(mu_2020_a)
print("rendimiento esperado anual")
print(sigma_2020_a)
print("volatilidad anual")
d <- length(rendimiento)
lns0 <- as.numeric(log(precio[d]))
lns0
n <- 10000
dt <- 1/4
simula2 <- tibble(epsilon=rnorm(n),lnS=(mu_2020_a-(1/2)*sigma_2020_a**2)*dt+sigma_2020_a*sqrt(dt)*epsilon)
PE_3 <- lns0+mean(simula2$lnS)
PE_3
Media_DS <- mean(simula2$lnS)
DeSt_DS <- as.numeric(sqrt(var(simula2$lnS)))
Z <- qnorm(.975)
P_Sup_3 <- lns0+Media_DS+Z*DeSt_DS
P_Inf_3 <- lns0+Media_DS-Z*DeSt_DS
P_Sup_3
P_Inf_3
lns0
n <- 10000
dt <- 1/2
simula2 <- tibble(epsilon=rnorm(n),lnS=(mu_2020_a-(1/2)*sigma_2020_a**2)*dt+sigma_2020_a*sqrt(dt)*epsilon)
PE_6 <- lns0+mean(simula2$lnS)
PE_6
Media_DS <- mean(simula2$lnS)
DeSt_DS <- as.numeric(sqrt(var(simula2$lnS)))
Z <- qnorm(.975)
P_Sup_6 <- lns0+Media_DS+Z*DeSt_DS
P_Inf_6 <- lns0+Media_DS-Z*DeSt_DS
P_Sup_6
P_Inf_6
lns0
n <- 10000
dt <- 3/4
simula2 <- tibble(epsilon=rnorm(n),lnS=(mu_2020_a-(1/2)*sigma_2020_a**2)*dt+sigma_2020_a*sqrt(dt)*epsilon)
PE_9 <- lns0+mean(simula2$lnS)
PE_9
Media_DS <- mean(simula2$lnS)
DeSt_DS <- as.numeric(sqrt(var(simula2$lnS)))
Z <- qnorm(.975)
P_Sup_9 <- lns0+Media_DS+Z*DeSt_DS
P_Inf_9 <- lns0+Media_DS-Z*DeSt_DS
P_Sup_9
P_Inf_9
lns0
n <- 10000
dt <- 1
simula2 <- tibble(epsilon=rnorm(n),lnS=(mu_2020_a-(1/2)*sigma_2020_a**2)*dt+sigma_2020_a*sqrt(dt)*epsilon)
PE_12 <- lns0+mean(simula2$lnS)
PE_12
Media_DS <- mean(simula2$lnS)
DeSt_DS <- as.numeric(sqrt(var(simula2$lnS)))
Z <- qnorm(.975)
P_Sup_12 <- lns0+Media_DS+Z*DeSt_DS
P_Inf_12 <- lns0+Media_DS-Z*DeSt_DS
P_Sup_12
P_Inf_12
lns0
resumen <- tibble(Tres <- c(PE_3,P_Sup_3,P_Inf_3),
Seis <- c(PE_6,P_Sup_6,P_Inf_6),
Nueve <- c(PE_9,P_Sup_9,P_Inf_9),
Doce <- c(PE_12,P_Sup_12,P_Inf_12),
.name_repair = ~ c("Tres meses","Seis meses","Nueve meses","Doce meses"))
resumen <- as.data.frame(resumen)
rownames(resumen) <- c("Valor esperado","Superior 95%","Inferior 95%")
resumen
getSymbols("^MXX", from='2016-01-01', to=today(), warnings=FALSE)
rend_mercado <- na.omit(diff(log(MXX$MXX.Adjusted)))
# agregamos na.omit para evitar los datos incompletos
datos_corr <- merge.xts(rend_mercado,rendimiento)
names(datos_corr) <- c('IPC',clave)
chart.Correlation(na.omit(datos_corr))
cor(na.omit(datos_corr))
cov(na.omit(datos_corr))
setwd('C:/Users/theso/OneDrive/Documents/Semestre 6/Analisis de Riesgo/Proyecto-AR-definitivo/Datos')
Emisoras <- read_csv('Emisoras_Completo2.csv')
setwd('C:/Users/theso/OneDrive/Documents/Semestre 6/Analisis de Riesgo/modulos/datos')
Emisoras <- read_csv('Emisoras_Completo2.csv')
setwd('C:/Users/theso/OneDrive/Documents/Semestre 6/Analisis de Riesgo/Proyecto-AR-definitivo/Datos')
Emisoras <- read_csv('Emisoras_Completo2.csv')
da <- read.table("C:/Users/theso/Documents/Semestre 3/Series de Tiempo/m-intcsp7309.txt", header = TRUE)
if(!require("fGarch")) install.packages("fGarch")
library("fGarch")
library("fGarch")
library("quantmod")
da <- read.table("C:/Users/theso/Documents/Semestre 3/Series de Tiempo/m-intcsp7309.txt", header = TRUE)
#header es para que no tome como valor la primera fila.
intc <- log(da$intc+1) #Se le suma 1 para evitar negativos
ts.plot(intc)
acf(intc)
pacf(intc)
acf(intc**2) #esto es para sacar los rendimientos al cuadrado
# y ver varios rendimientos significativos
pacf(intc**2)#Sugire un ARCH(3)
#para determinar el orden
m1 <- garchFit(~1+garch(3,0),data = intc,trace = FALSE)
#Se va directo al GARCH y ayuda a resumir este
#Es lo mismo a ARCH(3) = GARCH(3,0) y a AR(3) = ARMA(3,0) = ARIMA(3,0,0)
summary(m1)
#usamos Ljung-Box para checar que los residuos no esten correlacionados, y si no estaban asi-
# - resultaba en un ruido blanco
# L jung Box solo rechaza eb R2 Q(15), y alpha2 y 3 y no -
#- son significantes, probaremos ARCH(1)
m2 <- garchFit(~1+garch(1,0),data = intc,trace = FALSE)
summary(m2)
#Tiene que ser chico el numero para rechazar la hipotesis (H=los residuales estan relacionados)
plot(m2)
v1 <- fBasics::volatility(m1)
v2 <- fBasics::volatility(m2)
par(mfrow=c(2,1))
ts.plot(v1)
ts.plot(v2)
#nos va a a aparecer "Enter an item from the menu, or 0 to exit-
# -Selection: ts.plot(v1)", ponemos en la consola "0" y corremos el
#codigo de nuevo.
setwd('C:/Users/theso/OneDrive/Documents/Semestre 6/Analisis de Riesgo/Proyecto-AR-definitivo/Datos', header = TRUE)
setwd('C:/Users/theso/OneDrive/Documents/Semestre 6/Analisis de Riesgo/Proyecto-AR-definitivo/Datos')
Emisoras <- read_csv('Emisoras_Completo2.csv')
setwd('C:/Users/theso/OneDrive/Documents/Semestre 6/Analisis de Riesgo/Proyecto-AR-definitivo/Datos')
Emisoras <- read_csv('Emisoras_Completo2.csv', header = TRUE)
setwd('C:/Users/theso/OneDrive/Documents/Semestre 6/Analisis de Riesgo/Proyecto-AR-definitivo/Datos')
Emisoras <- read_csv('Emisoras_Completo2.csv')
setwd('C:/Users/theso/OneDrive/Documents/Semestre 6/Analisis de Riesgo/Proyecto-AR-definitivo/Datos')
Emisoras <- read_csv('C:/Users/theso/OneDrive/Documents/Semestre 6/Analisis de Riesgo/Proyecto-AR-definitivo/Datos/Emisoras_Completo2.csv')
#setwd('C:/Users/theso/OneDrive/Documents/Semestre 6/Analisis de Riesgo/Proyecto-AR-definitivo/Datos')
Emisoras <- read_csv('C:/Users/theso/OneDrive/Documents/Semestre 6/Analisis de Riesgo/Proyecto-AR-definitivo/Datos/Emisoras_Completo2.csv')
setwd('/../Proyecto-AR-definitivo/Datos')
setwd('../Proyecto-AR-definitivo/Datos')
Emisoras <- read_csv('Emisoras_Completo2.csv')
setwd('C:/Users/theso/OneDrive/Documents/Semestre 6/Analisis de Riesgo/Proyecto-AR-definitivo/Datos')
Emisoras <- read_csv('Emisoras_Completo2.csv')
setwd('C:/Users/theso/OneDrive/Documents/Semestre 6/Analisis de Riesgo/Proyecto-AR-definitivo/Datos')
Emisoras <- read_csv('Emisoras_Completo2.csv')
